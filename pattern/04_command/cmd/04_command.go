package main

import (
	"fmt"
	"../pkg"
)
// Команда — это материализация вызова метода.

/*Команда — это поведенческий паттерн проектирования,
который превращает запросы в объекты, позволяя
передавать их как аргументы при вызове методов, ставить
запросы в очередь, логировать их, а также поддерживать
отмену операций.*/

/*
Убирает прямую зависимость между объектами,
вызывающими операции и объектами, которые их
непосредственно выполняют.
 Позволяет реализовать простую отмену и повтор операций.
 Позволяет реализовать отложенный запуск команд.
 Позволяет собирать сложные команды из простых.
 Реализует принцип открытости/закрытости.
 Усложняет код программы за счёт дополнительных классов*/

func main() {
	var commandQueue []pkg.Commander // очередь команд

	engine := &pkg.Engine{State: false} //бизнес логика
	OnCmd := &pkg.OnStartCommand{MyEngine: engine} // команда1 которая знает что делать с объектом бизнес логики
	OffCmd := &pkg.OnSwitchOffCommand{MyEngine: engine} // команда 2
	commandQueue = append(commandQueue, OnCmd, OffCmd, OnCmd, OffCmd) // очередь команд
	driver := pkg.Driver{CommandQueue: commandQueue} //интерфейсный слой. (кнопка, которая запускает команды) (driver ничего не знает про engine)
	driver.Execute() //здесь на кнопку нажали и все команды из очереди выполнились
	fmt.Println(engine)
}

