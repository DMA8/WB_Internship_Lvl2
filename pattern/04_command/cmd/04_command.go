package main

import (
	"fmt"
	"../pkg"
)
// Суть - сделать слой между объектами

/*Команда — это поведенческий паттерн проектирования,
который превращает запросы в объекты, позволяя
передавать их как аргументы при вызове методов, ставить
запросы в очередь, логировать их, а также поддерживать
отмену операций.*/

/*
Убирает прямую зависимость между объектами,
вызывающими операции и объектами, которые их
непосредственно выполняют.
 Позволяет реализовать простую отмену и повтор операций.
 Позволяет реализовать отложенный запуск команд.
 Позволяет собирать сложные команды из простых.
 Реализует принцип открытости/закрытости.
 Усложняет код программы за счёт дополнительных классов*/

func main() {
	var commandQueue []pkg.Commander // очередь команд

	engine := &pkg.Engine{State: false}
	OnCmd := &pkg.OnStartCommand{MyEngine: engine}
	OffCmd := &pkg.OnSwitchOffCommand{MyEngine: engine}
	commandQueue = append(commandQueue, OnCmd, OffCmd, OnCmd, OffCmd) // если добавить изменить команду, состояние двигателя изменится
	driver := pkg.Driver{CommandQueue: commandQueue}
	driver.Execute()
	fmt.Println(engine)
}

